"""added order and payment flow

Revision ID: 4f14d49943e3
Revises: 
Create Date: 2024-06-25 18:55:27.062057

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4f14d49943e3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_Payment_id', table_name='Payment')
    op.drop_table('Payment')
    op.add_column('Order', sa.Column('amount_received', sa.Float(), nullable=True))
    op.add_column('Order', sa.Column('status', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('Order', 'status')
    op.drop_column('Order', 'amount_received')
    op.create_table('Payment',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('amount_paid', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('payment_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('tenant_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('order_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['User.id'], name='Payment_created_by_fkey'),
    sa.ForeignKeyConstraint(['order_id'], ['Order.id'], name='Payment_order_id_fkey'),
    sa.ForeignKeyConstraint(['tenant_id'], ['Tenant.id'], name='Payment_tenant_id_fkey'),
    sa.ForeignKeyConstraint(['updated_by'], ['User.id'], name='Payment_updated_by_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], name='Payment_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Payment_pkey')
    )
    op.create_index('ix_Payment_id', 'Payment', ['id'], unique=False)
    # ### end Alembic commands ###
